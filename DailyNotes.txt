	Java Fullstack
	
	
	
	java developer
	database developer
	frontend develoeper
	
	
	
	corejava			case study-1
	database(mysql)
	JDBC
	JPA					case study-2
	SPring 
	Springboot			case study-3
	
	html
	css
	js
	bs
	ts
	angular				case study-4
	
	
	
	JAVA:=
	======
	
Language:
=========
		communication with human
		
Programming Lanuage:
====================  o's 1's

		communication with machine


	hardware-->software-->programs


c,c++,java,python,.net,.....

			POP		     				OOP
	C,B,BCPL,COBOL,PHOTON,....		c++,java,python,.net,......

			oops    oopl

why ?			1)performance		inheritance,polymorphisam
				2)security			abstraction ,encapsulation


	
WHY JAVA? 1996   python 1993

		JDK 1.0
	
	version history-->james gosling-->OAK-->java->coffee seed tree name -->java
	
			sun micro system-->oracle corporation
	
	
	15
	
	JDK -->1 1996  python--1993--guido van russam 3.x
	
	
		1)platform independent   java app-->WORA
		2)garbage collection    garbage collector
	
	
	
	
	.net->microsoft -->p dependent
	
	
	java -->oracle
	
	
	welcome to java program
	
	
	installation
	
	53 keywords-->alphabets-->lowercase
	
	
	56
	
	26
	
	Welcome.java
	
	class Welcome
	{
	
	public static void main(String args[])
	{
	System.out.println("welcome to java");
	}
	
	}
	
Identifiers:
============
any name in java will call it as identifier 
	
		classname,methodname,interface name,objectname.....
	
		 a-z
		 A-Z
		 0-9
		 $
		 _
		 
Variables:-
===========		 
		sandeeptrainer 9494949494
		 
		a name given to the memory location
		
		local variable		-->inside the method/block
		global variable		-->outside the method and inside the class
		
		syntax:	
				datatype varname=value; //static typing 
		
		name
		age
		aadhar
		pan
		mobile
		weight
		sal
		
		PDT     		NPDT
		1value			multiple values
							string,array..  75.6  23.56
		
						byte age=32; 1 bytes 1000*7    contact:994949994
						
		byte     1 byte		-128 to 127
		short	 2 bytes	-32768 to 32767
		int		 4 bytes	-2147483768 to 2147483767
		long	 8 bytes    -2 power 63 to (2 power 63)-1
		
		float 	 4 bytes		5 to 6 decimal 23.435982349203
		double	 8 bytes		14 to 15 		23.435982349203
		
		char	 2 bytes		'M'
		boolean  1 bit  true-1 false-0
		
		
		java supports unicode 18 international 
		c    support ASCII	english	a-97 A-65
		
		
	package -->folder-->

	predefined   -->
	user defined -->
	
		packages 
		
		package com.demo.basics;

NOTE:JAVA.LANG PACKAGE IS BY DEFAULT PACKAGE AVAIALBALE FOR JAVA FILE.

	import 
		
		
		IDE TOOL-->eclipse,myeclipse,netbeans,vscode,intellji....
		
		
		
		JSE 				JEE              JME
		
		
		
		1)desktop/standalone applications  :   JSE:corejava,awt,swings,applets
				Ex:notepad++,eclipse,media player,antivirus 
		2)web applications			server JEE:servlets,jsp,spring mvc... url
		3)distrubuted applications   webservices
		4)mobile applications      JME:android
		
	Eclipse:	
		
		flow control statements
				
					if
					else
					switch
					while
					dowhile
					for 
		
		
		arrays
			group of values
			
			int a[]={12,34,22,53,64,63,68,90}
		
		
					index
		
			sop(a[1])
		
		classname objname=new classname();
			int a[]=new int[10];
				a[0]=123
		 
		 
	
		int array[] = { 12, 34, 54, 67, 21, 1, 3, 6, 73, 34, 77 };

		for (int i = 0; i < array.length; i++) {
			if (array[i] < 50)
				System.out.println(array[i]);
		}
		int value = 1;
		int array1[] = new int[52];
		for (int i = 0; value<= 100; value++) {
			if (value % 2 == 0) {
				array1[i] = value;
				i++;
			}
			
		}
		for (int i = 0; i < array1.length; i++) {
			System.out.println(array1[i]);
		}
		
		int arr[][]= {{12,13,14,44},{23,22,54,65},{45,11,55,23}};
		
		
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				System.out.print(arr[i][j]+" ");
			}
			System.out.println();
		}
		
	
	Variables:
	===========
		local variable
		
		global variable
		
				instance
				
				 static 
	
	4 key points
	
	1)syntax
	
		int eid=123;					//instance
		static int countryCode=91;     //static 
	
	2)Memory
			instance properties will get memory at the time of object creation
			
			class Test---> classname objname=new classname();
							Test test=new Test();
			static properties will get memory only once at the time of class loading into JVM
					javac Test.java -->java Test -->JVM
	3)Access
	
			instance properties we can access by using object reference
			static properties we can access by using classname
	
	4)usage 
				for unique data will go for instance like eid,sid,contact,aadhar,pan,accno...
				for common data will go for static like schoolname,clgname,countryname,orgname....
					
			eid
			orgname
			countryName
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	